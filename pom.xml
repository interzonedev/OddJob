<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.interzonedev</groupId>
	<artifactId>oddjob</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<name>OddJob Object Oriented JavaScript Framework</name>
	<description>
		OddJob is a way to have Java-like object inheritance and package organization.
	</description>
	<url>https://github.com/interzonedev/OddJob</url>
	<inceptionYear>2012</inceptionYear>

	<developers>
		<developer>
			<name>Mark Markarian</name>
			<email>mark@interzonedev.com</email>
			<url>http://interzonedev.com</url>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>-8</timezone>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<js.source.directory>src/main/javascript</js.source.directory>
		<js.compress.output.directory>${project.build.directory}/${project.build.finalName}</js.compress.output.directory>
		<js.compress.output.filename>oddjob-min.js</js.compress.output.filename>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1H.22</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.6</version>
		</dependency>
	</dependencies>

	<pluginRepositories>
		<pluginRepository>
			<name>oss.sonatype.org</name>
			<id>oss.sonatype.org</id>
			<url>http://oss.sonatype.org/content/groups/public</url>
		</pluginRepository>
		<pluginRepository>
			<id>jsdoctk</id>
			<url>http://jsdoctk-plugin.googlecode.com/svn/repo</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>net.alchim31.maven</groupId>
										<artifactId>yuicompressor-maven-plugin</artifactId>
										<versionRange>[1.3.0,)</versionRange>
										<goals>
											<goal>compress</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>properties-maven-plugin</artifactId>
										<versionRange>[1.0-alpha-2,)</versionRange>
										<goals>
											<goal>read-project-properties</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- External project properties file -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${basedir}/build.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- YUI Compression -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
				<version>1.3.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>compress</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<preProcessAggregates>false</preProcessAggregates>
					<jswarn>true</jswarn>
					<linebreakpos>1000</linebreakpos>
					<sourceDirectory>${js.source.directory}</sourceDirectory>
					<includes>
						<include>**/*.js</include>
					</includes>
					<outputDirectory>${js.compress.output.directory}</outputDirectory>
					<aggregations>
						<aggregation>
							<removeIncluded>true</removeIncluded>
							<output>${js.compress.output.directory}/${js.compress.output.filename}</output>
							<includes>
								<include>**/*.js</include>
							</includes>
						</aggregation>
					</aggregations>
				</configuration>
			</plugin>

			<!-- JSTools JS Docs -->
			<plugin>
				<groupId>gr.abiss.mvn.plugins</groupId>
				<artifactId>maven-jstools-plugin</artifactId>
				<version>0.7</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<goals>
							<goal>jsdoc</goal>
							<goal>jslint</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jsDir>${js.source.directory}</jsDir>
					<includes>**/*.js</includes>
					<excludes>base2-p.js</excludes>
				</configuration>
			</plugin>

			<!-- jsdoctk JS Docs -->
			<plugin>
				<groupId>nl.windgazer</groupId>
				<artifactId>jsdoctk-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<template>jsdoc</template>
					<directory>${project.build.directory}/jsdoc</directory>
					<recurse>5</recurse>
					<ext>js</ext>
					<allfunctions>true</allfunctions>
					<Allfunctions>false</Allfunctions>
					<privateOption>false</privateOption>
					<srcDir>${basedir}/${js.source.directory}</srcDir>
					<exclude>
						<param>base2-p.js</param>
					</exclude>
				</configuration>
			</plugin>

			<!-- Test servlet build without dependencies to be run with the repo in the classpath -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
						<configuration>
							<assembleDirectory>target</assembleDirectory>
							<programs>
								<program>
									<mainClass>com.interzonedev.oddjob.AjaxTestServlet</mainClass>
									<name>ajaxTestServlet</name>
								</program>
							</programs>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
